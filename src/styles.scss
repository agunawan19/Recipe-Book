@import '~bootstrap/dist/css/bootstrap.min.css';

$clickable-cursor: pointer;

.cursor-pointer {
  cursor: $clickable-cursor;
}

// .loader {
//   border: 16px solid #f3f3f3; /* Light grey */
//   border-top: 16px solid #3498db; /* Blue */
//   border-radius: 50%;
//   width: 100px;
//   height: 100px;
//   animation: spin 2s linear infinite;
// }

// @keyframes spin {
//   0% {
//     transform: rotate(0deg);
//   }
//   100% {
//     transform: rotate(360deg);
//   }
// }

// @keyframes spinner {
//   0% {
//   transform: translate3d(-50%, -50%, 0) rotate(0deg);
//   }
//   100% {
//   transform: translate3d(-50%, -50%, 0) rotate(360deg);
//   }
// }

// .loader::before {
//   animation: 1.5s linear infinite spinner;
//   animation-play-state: inherit;
//   // border: 16px solid #cfd0d1; /* Light grey */
//   // border-top: 16px solid #3498db; /* Blue */
//   border: solid 15px #cfd0d1;
//   border-bottom-color:#1c87c9;
//   border-radius: 50%;
//   content: "";
//   height: 140px;
//   width: 140px;
//   position: absolute;
//   top: 50%;
//   left: 50%;
//   transform: translate3d(-50%, -50%, 0);
//   will-change: transform;
// }

// @mixin loader($activeColor: "#EF6565", $selector: "&::before", $time: 1.5s) {
//   // Animation Keyframes
//   @keyframes spinner {
//       0% {
//           transform: translate3d(-50%, -50%, 0) rotate(0deg);
//       }
//       100% {
//            transform: translate3d(-50%, -50%, 0) rotate(360deg);
//       }
//   }

//   // These styles are being applied the element
//   // where we include the mixin. I'd recommend for
//   // maintainability to keep these as minimal as possible.
//   position: relative;

//   // Styles to fade out spinner when loaded
//   &.-loaded {
//       opacity: 0;
//       transition: opacity linear 0.1s;
//   }
//   // Spinner
//   #{$selector} {
//       animation: $time linear infinite spinner;
//       border: solid 3px #eee;
//       border-bottom-color: #{$activeColor};
//       border-radius: 50%;
//       content: "";
//       height: 40px;
//       left: 50%;
//       opacity: inherit;
//       position: absolute;
//       top: 50%;
//       transform: translate3d(-50%, -50%, 0);
//       transform-origin: center;
//       width: 40px;
//       will-change: transform;
//   }
// }

.lds-spinner {
  color: official;
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}
.lds-spinner div {
  transform-origin: 40px 40px;
  animation: lds-spinner 1.2s linear infinite;
}
.lds-spinner div:after {
  content: " ";
  display: block;
  position: absolute;
  top: 3px;
  left: 37px;
  width: 6px;
  height: 18px;
  border-radius: 20%;
  background: #cef;
}
.lds-spinner div:nth-child(1) {
  transform: rotate(0deg);
  animation-delay: -1.1s;
}
.lds-spinner div:nth-child(2) {
  transform: rotate(30deg);
  animation-delay: -1s;
}
.lds-spinner div:nth-child(3) {
  transform: rotate(60deg);
  animation-delay: -0.9s;
}
.lds-spinner div:nth-child(4) {
  transform: rotate(90deg);
  animation-delay: -0.8s;
}
.lds-spinner div:nth-child(5) {
  transform: rotate(120deg);
  animation-delay: -0.7s;
}
.lds-spinner div:nth-child(6) {
  transform: rotate(150deg);
  animation-delay: -0.6s;
}
.lds-spinner div:nth-child(7) {
  transform: rotate(180deg);
  animation-delay: -0.5s;
}
.lds-spinner div:nth-child(8) {
  transform: rotate(210deg);
  animation-delay: -0.4s;
}
.lds-spinner div:nth-child(9) {
  transform: rotate(240deg);
  animation-delay: -0.3s;
}
.lds-spinner div:nth-child(10) {
  transform: rotate(270deg);
  animation-delay: -0.2s;
}
.lds-spinner div:nth-child(11) {
  transform: rotate(300deg);
  animation-delay: -0.1s;
}
.lds-spinner div:nth-child(12) {
  transform: rotate(330deg);
  animation-delay: 0s;
}
@keyframes lds-spinner {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
